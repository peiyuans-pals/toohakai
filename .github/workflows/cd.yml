name: Continuous Deployment
on:
  push:
jobs:
  build-server:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.1
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: server - build and push to ghcr
        uses: docker/build-push-action@v4
        with:
          file: ./apps/server/Dockerfile
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/toohakai/server:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/toohakai/server:latest

  build-web:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.1
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: web - build and push to ghcr
        uses: docker/build-push-action@v4
        env:
          NEXT_PUBLIC_TOOHAKAI_API_URL: "https://api.toohakai.fun"
          NEXT_PUBLIC_DEPLOYMENT_DOMAIN: "https://www.toohakai.fun"
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        with:
          file: ./apps/web/Dockerfile
          context: .
          push: true
          build-args: |
            NEXT_PUBLIC_TOOHAKAI_API_URL=${{ env.NEXT_PUBLIC_TOOHAKAI_API_URL }}
            NEXT_PUBLIC_DEPLOYMENT_DOMAIN=${{ env.NEXT_PUBLIC_DEPLOYMENT_DOMAIN }}
            NEXT_PUBLIC_SUPABASE_URL=${{ env.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ env.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/toohakai/web:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/toohakai/web:latest

  deploy:
    needs: [build-server, build-web]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Deploy and run docker images
        env:
          PRIVATE_KEY: ${{ secrets.DEPLOYMENT_SERVER_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.DEPLOYMENT_SERVER_HOSTNAME  }}
          USER_NAME: ${{ secrets.DEPLOYMENT_SERVER_USERNAME  }}
        run: |
          pwd
          ls
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key ./deployment/docker-compose.yml ${USER_NAME}@${HOSTNAME}:/home/ubuntu/deployment
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd /root/containers &&
            docker compose pull &&
            docker compose up -d &&
            docker system prune --force
          '

  # 1. sftp into machine
  # 2. send over docker-compose.yml
  # 3. create .env files and send that over too
  # 4 run docker-compose up -d remotely
  # 5 wait for healthcheck to pass
